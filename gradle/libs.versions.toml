[metadata]
format = { version = "1.1" }

# Implementation-only dependencies, or dependencies that use a different version than in API
# See SpongeAPI's gradle/libs.versions.toml for many dependency declarations that Sponge also uses
[versions]
asm = "9.7"
log4j = "2.22.1"
forgeAutoRenamingTool = "1.0.6"
mixin = "0.8.7"
bootstrap = "2.1.1"
modlauncher = "10.2.1"
securemodules = "2.2.20"
jarjar = "0.3.26"
guava = "32.1.2-jre"
mockito = "5.11.0"
jline = "3.25.1"
tinylog = "2.7.0"
vineflower = "1.10.1"

[libraries]
# common
asm = { module = "org.ow2.asm:asm", version.ref = "asm" }
asm-analysis = { module = "org.ow2.asm:asm-analysis", version.ref = "asm" }
asm-commons = { module = "org.ow2.asm:asm-commons", version.ref = "asm" }
asm-util = { module = "org.ow2.asm:asm-util", version.ref = "asm" }
asm-tree = { module = "org.ow2.asm:asm-tree", version.ref = "asm" }
joptSimple = { module = "net.sf.jopt-simple:jopt-simple", version = "5.0.4" }
log4j-api = { module = "org.apache.logging.log4j:log4j-api", version.ref = "log4j" }
log4j-core = { module = "org.apache.logging.log4j:log4j-core", version.ref = "log4j" }
log4j-jpl = { module = "org.apache.logging.log4j:log4j-jpl", version.ref = "log4j" }
log4j-slf4j2 = { module = "org.apache.logging.log4j:log4j-slf4j2-impl", version.ref = "log4j" }
bootstrap = { module = "net.minecraftforge:bootstrap", version.ref = "bootstrap" }
modlauncher = { module = "net.minecraftforge:modlauncher", version.ref = "modlauncher" }
securemodules = { module = "net.minecraftforge:securemodules", version.ref = "securemodules" }
tinylog-api = { module = "org.tinylog:tinylog-api", version.ref = "tinylog" }
tinylog-impl = { module = "org.tinylog:tinylog-impl", version.ref = "tinylog" }
tinylog-slf4j = { module = "org.tinylog:slf4j-tinylog", version.ref = "tinylog" }

# generator
javaparser =  { module = "com.github.javaparser:javaparser-core", version = "3.25.9" }
javapoet = { module = "com.squareup:javapoet", version = "1.13.0" }

# modlauncher-transformers
accessWidener = { module = "net.fabricmc:access-widener", version = "2.1.0" }

# Sponge
adventure-serializerAnsi = { module = "net.kyori:adventure-text-serializer-ansi" } # version inherited from bom in API catalog
adventure-serializerConfigurate4 = { module = "net.kyori:adventure-serializer-configurate4" } # version inherited from bom in API catalog
configurate-jackson = { module = "org.spongepowered:configurate-jackson" } # version inherited from bom in API catalog
guava = { module = "com.google.guava:guava", version.ref = "guava" }
javaxInject = { module = "javax.inject:javax.inject", version = "1" }
mixin = { module = "org.spongepowered:mixin", version.ref = "mixin" }
mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockito" }
mockito-junitJupiter = { module = "org.mockito:mockito-junit-jupiter", version.ref = "mockito" }

# vanilla
forgeAutoRenamingTool = { module = "net.minecraftforge:ForgeAutoRenamingTool", version.ref = "forgeAutoRenamingTool" }
jarjar-fs = { module = "net.minecraftforge:JarJarFileSystems", version.ref = "jarjar" }
jline-reader = { module = "org.jline:jline-reader", version.ref = "jline" }
jline-terminal = { module = "org.jline:jline-terminal", version.ref = "jline" }
jline-terminalJansi = { module = "org.jline:jline-terminal-jansi", version.ref = "jline" }
lmaxDisruptor = { module = "com.lmax:disruptor", version = "3.4.4" }
terminalConsoleAppender = { module = "net.minecrell:terminalconsoleappender", version = "1.3.0" }

# buildtime-only
vineflower = { module = "org.vineflower:vineflower", version.ref = "vineflower" }

[plugins]
blossom = { id = "net.kyori.blossom", version = "2.1.0" }
indra-licenserSpotless = { id = "net.kyori.indra.licenser.spotless", version = "3.1.3" }
shadow = { id = "com.github.johnrengelman.shadow", version = "8.1.1" }
vanillaGradle = { id = "org.spongepowered.gradle.vanilla" }
versions = { id = "com.github.ben-manes.versions", version = "0.51.0" }
